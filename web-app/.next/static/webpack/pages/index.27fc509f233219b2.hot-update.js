"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./hooks/useChat.ts":
/*!**************************!*\
  !*** ./hooks/useChat.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useChat: function() { return /* binding */ useChat; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _useConversation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useConversation */ \"./hooks/useConversation.ts\");\n/* harmony import */ var _services_chatApi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/chatApi */ \"./services/chatApi.ts\");\n\n\n\nconst useChat = ()=>{\n    const { messages, conversationId, isTyping, setIsTyping, addMessage, updateLastMessage } = (0,_useConversation__WEBPACK_IMPORTED_MODULE_1__.useConversation)();\n    const [healthStatus, setHealthStatus] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // Fetch initial health status\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const fetchHealthStatus = async ()=>{\n            try {\n                const status = await _services_chatApi__WEBPACK_IMPORTED_MODULE_2__.chatApiService.getHealthStatus();\n                setHealthStatus(status);\n            } catch (error) {\n                console.error(\"Failed to fetch health status:\", error);\n            }\n        };\n        fetchHealthStatus();\n        // Refresh health status every 30 seconds\n        const interval = setInterval(fetchHealthStatus, 30000);\n        return ()=>clearInterval(interval);\n    }, []);\n    const sendMessage = async (messageText)=>{\n        if (!messageText.trim()) return;\n        // Check if user can query\n        if (healthStatus && !healthStatus.can_query) {\n            const errorMessage = {\n                text: \"You've run out of queries. Please wait for your health points to regenerate.\",\n                sender: \"bot\"\n            };\n            addMessage(errorMessage);\n            return;\n        }\n        const userMessage = {\n            text: messageText,\n            sender: \"user\"\n        };\n        addMessage(userMessage);\n        setIsTyping(true);\n        // Add an empty bot message that will be updated with the response\n        const botMessage = {\n            text: \"Looking at course content...\",\n            sender: \"bot\",\n            isStreaming: true\n        };\n        addMessage(botMessage);\n        try {\n            const data = await _services_chatApi__WEBPACK_IMPORTED_MODULE_2__.chatApiService.sendMessage(messageText, conversationId, (status)=>{\n                // Update the bot message with the current status\n                updateLastMessage(status, true);\n            });\n            if (data.response) {\n                updateLastMessage(data.response, false);\n                console.log(\"RAG Context:\", data.rag_context);\n                // Update health status from response\n                if (data.health_status) {\n                    setHealthStatus(data.health_status);\n                }\n            } else if (data.error) {\n                updateLastMessage(\"Error: \".concat(data.error), false);\n                // Update health status from error response if available\n                if (data.health_status) {\n                    setHealthStatus(data.health_status);\n                }\n            }\n        } catch (error) {\n            console.error(\"Error sending message:\", error);\n            updateLastMessage(error instanceof Error ? \"Error: \".concat(error.message) : \"Error: An unexpected error occurred\", false);\n        } finally{\n            setIsTyping(false);\n        }\n    };\n    return {\n        messages,\n        isTyping,\n        sendMessage,\n        healthStatus\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ob29rcy91c2VDaGF0LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTRDO0FBQ2lCO0FBQ007QUFFNUQsTUFBTUksVUFBVTtJQUNyQixNQUFNLEVBQ0pDLFFBQVEsRUFDUkMsY0FBYyxFQUNkQyxRQUFRLEVBQ1JDLFdBQVcsRUFDWEMsVUFBVSxFQUNWQyxpQkFBaUIsRUFDbEIsR0FBR1IsaUVBQWVBO0lBRW5CLE1BQU0sQ0FBQ1MsY0FBY0MsZ0JBQWdCLEdBQUdaLCtDQUFRQSxDQUFzQjtJQUV0RSw4QkFBOEI7SUFDOUJDLGdEQUFTQSxDQUFDO1FBQ1IsTUFBTVksb0JBQW9CO1lBQ3hCLElBQUk7Z0JBQ0YsTUFBTUMsU0FBUyxNQUFNWCw2REFBY0EsQ0FBQ1ksZUFBZTtnQkFDbkRILGdCQUFnQkU7WUFDbEIsRUFBRSxPQUFPRSxPQUFPO2dCQUNkQyxRQUFRRCxLQUFLLENBQUMsa0NBQWtDQTtZQUNsRDtRQUNGO1FBRUFIO1FBRUEseUNBQXlDO1FBQ3pDLE1BQU1LLFdBQVdDLFlBQVlOLG1CQUFtQjtRQUNoRCxPQUFPLElBQU1PLGNBQWNGO0lBQzdCLEdBQUcsRUFBRTtJQUVMLE1BQU1HLGNBQWMsT0FBT0M7UUFDekIsSUFBSSxDQUFDQSxZQUFZQyxJQUFJLElBQUk7UUFFekIsMEJBQTBCO1FBQzFCLElBQUlaLGdCQUFnQixDQUFDQSxhQUFhYSxTQUFTLEVBQUU7WUFDM0MsTUFBTUMsZUFBd0I7Z0JBQzVCQyxNQUFNO2dCQUNOQyxRQUFRO1lBQ1Y7WUFDQWxCLFdBQVdnQjtZQUNYO1FBQ0Y7UUFFQSxNQUFNRyxjQUF1QjtZQUFFRixNQUFNSjtZQUFhSyxRQUFRO1FBQU87UUFDakVsQixXQUFXbUI7UUFDWHBCLFlBQVk7UUFFWixrRUFBa0U7UUFDbEUsTUFBTXFCLGFBQXNCO1lBQUVILE1BQU07WUFBZ0NDLFFBQVE7WUFBT0csYUFBYTtRQUFLO1FBQ3JHckIsV0FBV29CO1FBRVgsSUFBSTtZQUNGLE1BQU1FLE9BQU8sTUFBTTVCLDZEQUFjQSxDQUFDa0IsV0FBVyxDQUMzQ0MsYUFDQWhCLGdCQUNBLENBQUNRO2dCQUNDLGlEQUFpRDtnQkFDakRKLGtCQUFrQkksUUFBUTtZQUM1QjtZQUdGLElBQUlpQixLQUFLQyxRQUFRLEVBQUU7Z0JBQ2pCdEIsa0JBQWtCcUIsS0FBS0MsUUFBUSxFQUFFO2dCQUNqQ2YsUUFBUWdCLEdBQUcsQ0FBQyxnQkFBZ0JGLEtBQUtHLFdBQVc7Z0JBRTVDLHFDQUFxQztnQkFDckMsSUFBSUgsS0FBS0ksYUFBYSxFQUFFO29CQUN0QnZCLGdCQUFnQm1CLEtBQUtJLGFBQWE7Z0JBQ3BDO1lBQ0YsT0FBTyxJQUFJSixLQUFLZixLQUFLLEVBQUU7Z0JBQ3JCTixrQkFBa0IsVUFBcUIsT0FBWHFCLEtBQUtmLEtBQUssR0FBSTtnQkFFMUMsd0RBQXdEO2dCQUN4RCxJQUFJZSxLQUFLSSxhQUFhLEVBQUU7b0JBQ3RCdkIsZ0JBQWdCbUIsS0FBS0ksYUFBYTtnQkFDcEM7WUFDRjtRQUVGLEVBQUUsT0FBT25CLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLDBCQUEwQkE7WUFDeENOLGtCQUNFTSxpQkFBaUJvQixRQUNiLFVBQXdCLE9BQWRwQixNQUFNcUIsT0FBTyxJQUN2Qix1Q0FDSjtRQUVKLFNBQVU7WUFDUjdCLFlBQVk7UUFDZDtJQUNGO0lBRUEsT0FBTztRQUNMSDtRQUNBRTtRQUNBYztRQUNBVjtJQUNGO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ob29rcy91c2VDaGF0LnRzP2MyZGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlQ29udmVyc2F0aW9uLCBNZXNzYWdlIH0gZnJvbSBcIi4vdXNlQ29udmVyc2F0aW9uXCI7XG5pbXBvcnQgeyBjaGF0QXBpU2VydmljZSwgSGVhbHRoU3RhdHVzIH0gZnJvbSBcIi4uL3NlcnZpY2VzL2NoYXRBcGlcIjtcblxuZXhwb3J0IGNvbnN0IHVzZUNoYXQgPSAoKSA9PiB7XG4gIGNvbnN0IHtcbiAgICBtZXNzYWdlcyxcbiAgICBjb252ZXJzYXRpb25JZCxcbiAgICBpc1R5cGluZyxcbiAgICBzZXRJc1R5cGluZyxcbiAgICBhZGRNZXNzYWdlLFxuICAgIHVwZGF0ZUxhc3RNZXNzYWdlLFxuICB9ID0gdXNlQ29udmVyc2F0aW9uKCk7XG4gIFxuICBjb25zdCBbaGVhbHRoU3RhdHVzLCBzZXRIZWFsdGhTdGF0dXNdID0gdXNlU3RhdGU8SGVhbHRoU3RhdHVzIHwgbnVsbD4obnVsbCk7XG4gIFxuICAvLyBGZXRjaCBpbml0aWFsIGhlYWx0aCBzdGF0dXNcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBmZXRjaEhlYWx0aFN0YXR1cyA9IGFzeW5jICgpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHN0YXR1cyA9IGF3YWl0IGNoYXRBcGlTZXJ2aWNlLmdldEhlYWx0aFN0YXR1cygpO1xuICAgICAgICBzZXRIZWFsdGhTdGF0dXMoc3RhdHVzKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gZmV0Y2ggaGVhbHRoIHN0YXR1czpcIiwgZXJyb3IpO1xuICAgICAgfVxuICAgIH07XG4gICAgXG4gICAgZmV0Y2hIZWFsdGhTdGF0dXMoKTtcbiAgICBcbiAgICAvLyBSZWZyZXNoIGhlYWx0aCBzdGF0dXMgZXZlcnkgMzAgc2Vjb25kc1xuICAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoZmV0Y2hIZWFsdGhTdGF0dXMsIDMwMDAwKTtcbiAgICByZXR1cm4gKCkgPT4gY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XG4gIH0sIFtdKTtcblxuICBjb25zdCBzZW5kTWVzc2FnZSA9IGFzeW5jIChtZXNzYWdlVGV4dDogc3RyaW5nKSA9PiB7XG4gICAgaWYgKCFtZXNzYWdlVGV4dC50cmltKCkpIHJldHVybjtcbiAgICBcbiAgICAvLyBDaGVjayBpZiB1c2VyIGNhbiBxdWVyeVxuICAgIGlmIChoZWFsdGhTdGF0dXMgJiYgIWhlYWx0aFN0YXR1cy5jYW5fcXVlcnkpIHtcbiAgICAgIGNvbnN0IGVycm9yTWVzc2FnZTogTWVzc2FnZSA9IHsgXG4gICAgICAgIHRleHQ6IFwiWW91J3ZlIHJ1biBvdXQgb2YgcXVlcmllcy4gUGxlYXNlIHdhaXQgZm9yIHlvdXIgaGVhbHRoIHBvaW50cyB0byByZWdlbmVyYXRlLlwiLCBcbiAgICAgICAgc2VuZGVyOiBcImJvdFwiIFxuICAgICAgfTtcbiAgICAgIGFkZE1lc3NhZ2UoZXJyb3JNZXNzYWdlKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCB1c2VyTWVzc2FnZTogTWVzc2FnZSA9IHsgdGV4dDogbWVzc2FnZVRleHQsIHNlbmRlcjogXCJ1c2VyXCIgfTtcbiAgICBhZGRNZXNzYWdlKHVzZXJNZXNzYWdlKTtcbiAgICBzZXRJc1R5cGluZyh0cnVlKTtcbiAgICBcbiAgICAvLyBBZGQgYW4gZW1wdHkgYm90IG1lc3NhZ2UgdGhhdCB3aWxsIGJlIHVwZGF0ZWQgd2l0aCB0aGUgcmVzcG9uc2VcbiAgICBjb25zdCBib3RNZXNzYWdlOiBNZXNzYWdlID0geyB0ZXh0OiBcIkxvb2tpbmcgYXQgY291cnNlIGNvbnRlbnQuLi5cIiwgc2VuZGVyOiBcImJvdFwiLCBpc1N0cmVhbWluZzogdHJ1ZSB9O1xuICAgIGFkZE1lc3NhZ2UoYm90TWVzc2FnZSk7XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IGNoYXRBcGlTZXJ2aWNlLnNlbmRNZXNzYWdlKFxuICAgICAgICBtZXNzYWdlVGV4dCwgXG4gICAgICAgIGNvbnZlcnNhdGlvbklkLFxuICAgICAgICAoc3RhdHVzOiBzdHJpbmcpID0+IHtcbiAgICAgICAgICAvLyBVcGRhdGUgdGhlIGJvdCBtZXNzYWdlIHdpdGggdGhlIGN1cnJlbnQgc3RhdHVzXG4gICAgICAgICAgdXBkYXRlTGFzdE1lc3NhZ2Uoc3RhdHVzLCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgKTtcbiAgICAgIFxuICAgICAgaWYgKGRhdGEucmVzcG9uc2UpIHtcbiAgICAgICAgdXBkYXRlTGFzdE1lc3NhZ2UoZGF0YS5yZXNwb25zZSwgZmFsc2UpO1xuICAgICAgICBjb25zb2xlLmxvZyhcIlJBRyBDb250ZXh0OlwiLCBkYXRhLnJhZ19jb250ZXh0KTtcbiAgICAgICAgXG4gICAgICAgIC8vIFVwZGF0ZSBoZWFsdGggc3RhdHVzIGZyb20gcmVzcG9uc2VcbiAgICAgICAgaWYgKGRhdGEuaGVhbHRoX3N0YXR1cykge1xuICAgICAgICAgIHNldEhlYWx0aFN0YXR1cyhkYXRhLmhlYWx0aF9zdGF0dXMpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGRhdGEuZXJyb3IpIHtcbiAgICAgICAgdXBkYXRlTGFzdE1lc3NhZ2UoYEVycm9yOiAke2RhdGEuZXJyb3J9YCwgZmFsc2UpO1xuICAgICAgICBcbiAgICAgICAgLy8gVXBkYXRlIGhlYWx0aCBzdGF0dXMgZnJvbSBlcnJvciByZXNwb25zZSBpZiBhdmFpbGFibGVcbiAgICAgICAgaWYgKGRhdGEuaGVhbHRoX3N0YXR1cykge1xuICAgICAgICAgIHNldEhlYWx0aFN0YXR1cyhkYXRhLmhlYWx0aF9zdGF0dXMpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIHNlbmRpbmcgbWVzc2FnZTpcIiwgZXJyb3IpO1xuICAgICAgdXBkYXRlTGFzdE1lc3NhZ2UoXG4gICAgICAgIGVycm9yIGluc3RhbmNlb2YgRXJyb3IgXG4gICAgICAgICAgPyBgRXJyb3I6ICR7ZXJyb3IubWVzc2FnZX1gIFxuICAgICAgICAgIDogXCJFcnJvcjogQW4gdW5leHBlY3RlZCBlcnJvciBvY2N1cnJlZFwiLFxuICAgICAgICBmYWxzZVxuICAgICAgKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgc2V0SXNUeXBpbmcoZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4ge1xuICAgIG1lc3NhZ2VzLFxuICAgIGlzVHlwaW5nLFxuICAgIHNlbmRNZXNzYWdlLFxuICAgIGhlYWx0aFN0YXR1cyxcbiAgfTtcbn07ICJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZUNvbnZlcnNhdGlvbiIsImNoYXRBcGlTZXJ2aWNlIiwidXNlQ2hhdCIsIm1lc3NhZ2VzIiwiY29udmVyc2F0aW9uSWQiLCJpc1R5cGluZyIsInNldElzVHlwaW5nIiwiYWRkTWVzc2FnZSIsInVwZGF0ZUxhc3RNZXNzYWdlIiwiaGVhbHRoU3RhdHVzIiwic2V0SGVhbHRoU3RhdHVzIiwiZmV0Y2hIZWFsdGhTdGF0dXMiLCJzdGF0dXMiLCJnZXRIZWFsdGhTdGF0dXMiLCJlcnJvciIsImNvbnNvbGUiLCJpbnRlcnZhbCIsInNldEludGVydmFsIiwiY2xlYXJJbnRlcnZhbCIsInNlbmRNZXNzYWdlIiwibWVzc2FnZVRleHQiLCJ0cmltIiwiY2FuX3F1ZXJ5IiwiZXJyb3JNZXNzYWdlIiwidGV4dCIsInNlbmRlciIsInVzZXJNZXNzYWdlIiwiYm90TWVzc2FnZSIsImlzU3RyZWFtaW5nIiwiZGF0YSIsInJlc3BvbnNlIiwibG9nIiwicmFnX2NvbnRleHQiLCJoZWFsdGhfc3RhdHVzIiwiRXJyb3IiLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./hooks/useChat.ts\n"));

/***/ })

});